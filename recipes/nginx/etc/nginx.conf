user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include  /etc/nginx/mime.types;
  default_type  application/octet-stream;

  geo $http_x_forwarded_for $allow_ip {
    default NG;
    127.0.0.1 OK;
    10.0.0.0/8 OK;
    172.16.0.0/12 OK;
    192.168.0.0/16 OK;
  }

  log_format ltsv 'time:$time_iso8601'
                  '\thost:$remote_addr'
                  '\tforwardedfor:$http_x_forwarded_for'
                  '\tmethod:$request_method'
                  '\turi:$request_uri'
                  '\tstatus:$status'
                  '\tsize:$body_bytes_sent'
                  '\treferer:$http_referer'
                  '\tua:$http_user_agent'
                  '\treqtime:$request_time'
                  '\tapptime:$upstream_response_time'
                  '\tcache:$upstream_http_x_cache'
                  '\truntime:$upstream_http_x_runtime'
                  '\tvhost:$host';

  access_log  /var/log/nginx/access.log  ltsv;

  sendfile           on;
  tcp_nopush         on;
  tcp_nodelay        on;
  server_tokens      off;
  limit_conn_zone $binary_remote_addr zone=addr:5m;
  limit_conn addr 100;
  keepalive_timeout 10;
  keepalive_requests 20;
  proxy_connect_timeout 10;
  proxy_send_timeout 10;
  proxy_read_timeout 60;

  gzip on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_proxied any;
  gzip_types text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/xml+rss
        application/xml
        application/json;
  gzip_min_length 1024;
  gzip_buffers 4 8k;
  gzip_vary on;
  gzip_disable "MSIE [1-6]\.";
  gzip_disable "Mozilla/4";

  proxy_cache_path /var/cache/nginx keys_zone=zone:1m levels=2:2 max_size=1g inactive=7d;
  proxy_temp_path  /var/cache/nginx/temp;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      '';
  }

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name localhost hswinter.mydns.jp;
    charset UTF-8;

    client_max_body_size 1024M;

    set_real_ip_from 172.18.0.0/16;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    if ($allow_ip = 'NG') {
      return 444;
    }

    set $mobile "";
    if ($http_user_agent ~* '(Mobile|Android)') {
    set $mobile "SP";
    }
    set $do_not_cache 0;
    if ($request_method != GET) {
    set $do_not_cache 1;
    }
    if ($uri !~* ".(jpg|jpeg|png|gif|ico|svg|css|js|swf|pdf|html|htm)$") {
    set $do_not_cache 1;
    }
    proxy_no_cache $do_not_cache;
    proxy_cache_bypass $do_not_cache;
    proxy_ignore_headers Cache-Control;
    proxy_cache_key "$mobile//$scheme://$host$request_uri$is_args$args";
    proxy_cache zone;
    proxy_cache_valid 200 201 300 301 302 1d;
    proxy_cache_valid any 1m;

    # static-html
    location ~ / {
      index index.html;
      root /usr/share/nginx/html;
    }
    # # gitlab
    # location ^~ /gitlab {
    #   proxy_pass http://gitlab;
    # }
    # location ~ /(oauth|assets|api) {
    #   rewrite /(.*)$ /gitlab/$1 break;
    #   proxy_pass http://gitlab;
    # }
    # redmine
    location ^~ /redmine {
      proxy_pass http://redmine;
    }
    # jenkins
    location ^~ /jenkins {
      proxy_pass http://jenkins:8080;
    }
    # # mattermost
    # location /mattermost {
    #   proxy_pass http://mattermost:8000;
    # }
    # ldapadmin
    location ^~ /phpldapadmin {
      proxy_pass http://phpldapadmin;
    }
    # # sonarqube
    # location /sonarqube {
    #   proxy_pass http://sonarqube:9000;
    # }
    # keycloak
    location /keycloak {
      proxy_pass http://keycloak:8080;
    }
    # kibana
    location ^~ /kibana {
      rewrite /kibana/(.*)$ /$1 break;
      proxy_pass http://kibana:5601;
    }
    # testlink
    location ^~ /testlink {
      proxy_pass http://testlink;
    }
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_hide_header X-Powered-By;
    add_header X-Cache-Status $upstream_cache_status;
  }

  # server {
  #   listen 80;
  #   listen [::]:80;
  #   server_name ~^.+\.hswinter\.mydns\.jp$;
  #   charset UTF-8;

  #   client_max_body_size 1024M;

  #   set_real_ip_from 10.0.75.0/24;
  #   real_ip_header X-Forwarded-For;
  #   real_ip_recursive on;

  #   if ($allow_ip = 'NG') {
  #     return 444;
  #   }

  #   # gitlab
  #   location / {
  #     proxy_pass http://gitlab;
  #   }
  #   proxy_http_version 1.1;
  #   proxy_set_header Host $host;
  #   proxy_set_header X-Real-IP $remote_addr;
  #   proxy_set_header X-Forwarded-Proto http;
  #   proxy_set_header X-Forwarded-Host $host;
  #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header X-NginX-Proxy true;
  #   proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection $connection_upgrade;
  #   proxy_hide_header X-Powered-By;
  # }
}

# stream {
#   log_format ltsv 'time:$time_iso8601'
#                   '\thost:$remote_addr'
#                   '\tport:$remote_port'
#                   '\tstatus:$status';

#   access_log  /var/log/nginx/access.log  ltsv;

#   allow 127.0.0.1;
#   allow 10.0.0.0/8;
#   allow 172.16.0.0/12;
#   allow 192.168.0.0/16;
#   deny all;
#   # gitlab
#   server {
#     listen 22;
#     listen [::]:22;
#     proxy_pass gitlab:22;
#   }

#   # jenkins
#   server {
#     listen 60500;
#     listen [::]:60500;
#     proxy_pass jenkins:60500;
#   }
# }
